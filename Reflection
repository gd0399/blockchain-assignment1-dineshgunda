Building this mini blockchain gave me a practical understanding 
of hashing, immutability, and the Proof-of-Work (PoW) mechanism. I learned that a block’s hash
is derived not only from its own data but also from the previous block’s hash. This linking ensures t
hat even a small modification, such as changing a transaction amount, invalidates all subsequent 
blocks — clearly demonstrating the concept of immutability. 
It was insightful to see how quickly a manipulated chain fails during verification.

Implementing PoW helped me understand how computational security is enforced in blockchains.
By requiring the block’s hash to begin with a specific number of leading zeros, miners must perform numerous hash computations before finding a valid solution. 
Increasing the difficulty from 3 to 5 caused a significant rise in nonce values and mining time, showing how PoW directly controls the cost and difficulty of tampering.
To alter a blockchain, an attacker would need to re-mine all subsequent blocks faster than the rest of the network, which is practically infeasible.

I was especially surprised by how resource-intensive even a simple blockchain can become. 
With only five blocks and a difficulty of 5, my CPU usage spiked noticeably. 
This made me realize why real-world blockchains like Bitcoin require powerful mining hardware. 
Additionally, I understood the importance of consensus mechanisms — without PoW, anyone could easily modify the chain.

Overall, this project gave me a deeper appreciation of how hashing, immutability, and PoW work together to ensure the security, trust, and decentralization of blockchain networks.
